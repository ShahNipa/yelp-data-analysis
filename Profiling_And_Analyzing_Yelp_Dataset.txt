Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000

	SQL code used: SELECT COUNT(*) FROM TABLE_NAME 
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000(key:id)
ii. Hours = 1562(key:business_id)
iii. Category = 2643(key:business_id)
iv. Attribute = 1115(key:business_id)
v. Review = 10000(key:id), 8090(key:business_id), 9581(key:user_id)
vi. Checkin = 493(key:business_id)
vii. Photo = 10000(key:id), 6493(key:business_id)
viii. Tip = 537(key: user_id), 3979(key:business_id)
ix. User = 10000(key:id)
x. Friend = 11(key:user_id)
xi. Elite_years = 2780(key:user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


	SQL code used: General Format
	SELECT COUNT (DISTINCT (KEY_COLUMN_NAME)) FROM TABLE_NAME

	SELECT COUNT (DISTINCT(id)) FROM business
	SELECT COUNT (DISTINCT(business_id)) FROM hours
	SELECT COUNT (DISTINCT(business_id)) FROM category
	SELECT COUNT (DISTINCT(business_id)) FROM attribute
	SELECT COUNT (DISTINCT(id)), COUNT (DISTINCT(business_id)), COUNT (DISTINCT(user_id)) FROM review
	SELECT COUNT (DISTINCT(business_id)) FROM checkin
	SELECT COUNT (DISTINCT(id)) FROM photo
	SELECT COUNT (DISTINCT(user_id)), COUNT (DISTINCT(business_id)) FROM tip
	SELECT COUNT (DISTINCT(id)) FROM user
	SELECT COUNT (DISTINCT(user_id)) FROM friend
	SELECT COUNT (DISTINCT(user_id)) FROM elite_years



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer: 	
	SELECT COUNT(*) 
	FROM user 
	WHERE id IS NULL
	OR name IS NULL
	OR review_count IS NULL
	OR yelping_since IS NULL
	OR useful IS NULL
	OR funny IS NULL
	OR cool IS NULL
	OR fans IS NULL
	OR average_stars IS NULL
	OR compliment_hot IS NULL
	OR compliment_more IS NULL
	OR compliment_profile IS NULL
	OR compliment_cute IS NULL
	OR compliment_list IS NULL
	OR compliment_note IS NULL
	OR compliment_plain IS NULL
	OR compliment_cool IS NULL
	OR compliment_funny IS NULL
	OR compliment_writer IS NULL
	OR compliment_photos IS NULL

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995


	SQL code used: SELECT MIN(COLUMN_NAME), MAX(COLUMN_NAME), AVG(COLUMN_NAME) FROM TABLE_NAME
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT city, SUM(review_count) AS reviews
	FROM business
	GROUP BY city
	ORDER BY reviews DESC
	
	Copy and Paste the Result Below:
	+-----------------+---------+
	| city            | reviews |
	+-----------------+---------+
	| Las Vegas       |   82854 |
	| Phoenix         |   34503 |
	| Toronto         |   24113 |
	| Scottsdale      |   20614 |
	| Charlotte       |   12523 |
	| Henderson       |   10871 |
	| Tempe           |   10504 |
	| Pittsburgh      |    9798 |
	| Montréal        |    9448 |
	| Chandler        |    8112 |
	| Mesa            |    6875 |
	| Gilbert         |    6380 |
	| Cleveland       |    5593 |
	| Madison         |    5265 |
	| Glendale        |    4406 |
	| Mississauga     |    3814 |
	| Edinburgh       |    2792 |
	| Peoria          |    2624 |
	| North Las Vegas |    2438 |
	| Markham         |    2352 |
	| Champaign       |    2029 |
	| Stuttgart       |    1849 |
	| Surprise        |    1520 |
	| Lakewood        |    1465 |
	| Goodyear        |    1155 |
	+-----------------+---------+
	(Output limit exceeded, 25 of 362 total rows shown)


	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
	SELECT stars AS 'star rating', SUM(review_count) AS 'count'
	FROM business
	WHERE city == 'Avon'
	GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
	+-------------+-------+
	| star rating | count |
	+-------------+-------+
	|         1.5 |    10 |
	|         2.5 |     6 |
	|         3.5 |    88 |
	|         4.0 |    21 |
	|         4.5 |    31 |
	|         5.0 |     3 |
	+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:
	SELECT stars AS 'star rating', SUM(review_count) AS 'count'
	FROM business
	WHERE city == 'Beachwood'
	GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
	+-------------+-------+
	| star rating | count |
	+-------------+-------+
	|         2.0 |     8 |
	|         2.5 |     3 |
	|         3.0 |    11 |
	|         3.5 |     6 |
	|         4.0 |    69 |
	|         4.5 |    17 |
	|         5.0 |    23 |
	+-------------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT id, name, review_count 
	FROM user
	ORDER BY review_count DESC
	LIMIT 3
	
		
	Copy and Paste the Result Below:
	+------------------------+--------+--------------+
	| id                     | name   | review_count |
	+------------------------+--------+--------------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
	+------------------------+--------+--------------+



8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	No, posing more reviews does not correlate with more fans. From the results below, we can see that Amy with the highest fans 503 has only 609 reviews whereas Gerald who has the most reviews (from Q7) has lower fans 311 and Yuri who has the third most reviews (from Q7) has only 76 fans. Some other attributes should be considered for commenting on correlation.

	SELECT name, review_count, fans
	FROM user
	ORDER BY fans DESC

	+-----------+--------------+------+
	| name      | review_count | fans |
	+-----------+--------------+------+
	| Amy       |          609 |  503 |
	| Mimi      |          968 |  497 |
	| Harald    |         1153 |  311 |
	| Gerald    |         2000 |  253 |
	| Christine |          930 |  173 |
	| Lisa      |          813 |  159 |
	| Cat       |          377 |  133 |
	| William   |         1215 |  126 |
	| Fran      |          862 |  124 |
	| Lissa     |          834 |  120 |
	| Mark      |          861 |  115 |
	| Tiffany   |          408 |  111 |
	| bernice   |          255 |  105 |
	| Roanna    |         1039 |  104 |
	| Angela    |          694 |  101 |
	| .Hon      |         1246 |  101 |
	| Ben       |          307 |   96 |
	| Linda     |          584 |   89 |
	| Christina |          842 |   85 |
	| Jessica   |          220 |   84 |
	| Greg      |          408 |   81 |
	| Nieves    |          178 |   80 |
	| Sui       |          754 |   78 |
	| Yuri      |         1339 |   76 |
	| Nicole    |          161 |   73 |
	+-----------+--------------+------+
	(Output limit exceeded, 25 of 10000 total rows shown)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with the word "love" than "hate" in them.
	There are 1780 reviews with the word "love" and 232 reviews with the word "hate" in them.


	SQL code used to arrive at answer:
	SELECT COUNT(*)
	FROM review
	WHERE text like '%love%'

	SELECT COUNT(*)
	FROM review
	WHERE text like '%hate%'


	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT id, name, fans 
	FROM user
	ORDER BY fans DESC
	LIMIT 10
	
	
	Copy and Paste the Result Below:
	+------------------------+-----------+------+
	| id                     | name      | fans |
	+------------------------+-----------+------+
	| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
	| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
	| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
	| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
	| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
	+------------------------+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
I have chosen Phoenix city and Food category.
i. Do the two groups you chose to analyze have a different distribution of hours?
	Yes, the group with 2-3 star rating opens early and operates for longer hours whereas the group with 4-5 stars opens late and have shorter hours. 

ii. Do the two groups you chose to analyze have a different number of reviews?
    Yes, the group with 2-3 star rating have less reviews only 52 whereas the group with 4-5 star rating have more reviews 431 here. 
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	No, both the postal_code are different.	

SQL code used for analysis:
	SELECT 
	b.city, 
	c.category,
	h.hours,
	b.review_count,
	b.postal_code,
	CASE
		WHEN b.stars BETWEEN 2 AND 3 THEN '2-3 stars'
		WHEN b.stars BETWEEN 4 AND 5 THEN '4-5 stars'
		END AS star_rating
	FROM business b INNER JOIN category c
	    ON b.id = c.business_id
	INNER JOIN hours h
	    ON b.id = h.business_id
	WHERE (b.city == 'Phoenix') AND (c.category == 'Food') AND (star_rating == '2-3 stars' OR star_rating == '4-5 stars')
	GROUP BY b.stars

	+---------+----------+----------------------+--------------+-------------+-------------+
	| city    | category | hours                | review_count | postal_code | star_rating |
	+---------+----------+----------------------+--------------+-------------+-------------+
	| Phoenix | Food     | Saturday|5:00-20:00  |           52 | 85048       | 2-3 stars   |
	| Phoenix | Food     | Saturday|11:00-22:00 |          431 | 85028       | 4-5 stars   |
	+---------+----------+----------------------+--------------+-------------+-------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: 
	The businesses that are open have more reviews on an average or in total with more star rating compared to closed ones.
         
         
ii. Difference 2: 
	More business are reviewed as useful or funny or cool which are open compared to closed business
         
         
         
SQL code used for analysis:
	SELECT
	AVG(b.stars),AVG(b.review_count),SUM(b.review_count),
	COUNT(r.useful)+COUNT(r.funny)+COUNT(r.cool),b.is_open
	FROM business b INNER JOIN review r 
		ON b.id = r.id
	GROUP BY b.is_open

	+---------------+---------------------+---------------------+----------------------------------------------+---------+
	|  AVG(b.stars) | AVG(b.review_count) | SUM(b.review_count) | COUNT(r.useful)+COUNT(r.funny)+COUNT(r.cool) | is_open |
	+---------------+---------------------+---------------------+----------------------------------------------+---------+
	|           2.0 |                 4.0 |                   4 |                                            3 |       0 |
	| 2.96153846154 |       38.7692307692 |                 504 |                                           39 |       1 |
	+---------------+---------------------+---------------------+----------------------------------------------+---------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
	I chose to analyze whether the business category 'Restaurants' having the artributes like 'RestaurantsTableService' ,'goodforkids' and 'BusinessAcceptsCreditCards' relate to the star ratings or the review counts that they receive. I chose the state 'Ontario' for my analysis.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	For my analysis, I used 3 tables like business, category and attribute.
	I chose the business name, the attributes they have, the state where they run the business, their star ratings, and their reviews counts.
	In order to join all the 3 tables, I used the primary keys like id from business, business_id from category and business_id from attribute table.
    I chose theses variables as I wanted to know if having  Restaurant Table Services or Restaurants good for kids or Restaurants accepting credit cards or having any type of combination amongst these attributes contributes to better star ratings or having more reviews.
                           
                  
iii. Output of your finished dataset:

    +------------------------------+----------------------------+-------+-------+--------------+
	| business                     | attribute                  | state | stars | review_count |
	+------------------------------+----------------------------+-------+-------+--------------+
	| Edulis                       | RestaurantsTableService    | ON    |   4.0 |           89 |
	| Edulis                       | BusinessAcceptsCreditCards | ON    |   4.0 |           89 |
	| Edulis                       | GoodForKids                | ON    |   4.0 |           89 |
	| Hermanos Mexican Grill       | RestaurantsTableService    | ON    |   4.0 |           69 |
	| Hermanos Mexican Grill       | BusinessAcceptsCreditCards | ON    |   4.0 |           69 |
	| Hermanos Mexican Grill       | GoodForKids                | ON    |   4.0 |           69 |
	| Masamune Japanese Restaurant | RestaurantsTableService    | ON    |   4.0 |           61 |
	| Masamune Japanese Restaurant | BusinessAcceptsCreditCards | ON    |   4.0 |           61 |
	| Masamune Japanese Restaurant | GoodForKids                | ON    |   4.0 |           61 |
	| Big Smoke Burger             | RestaurantsTableService    | ON    |   3.0 |           47 |
	| Big Smoke Burger             | BusinessAcceptsCreditCards | ON    |   3.0 |           47 |
	| Big Smoke Burger             | GoodForKids                | ON    |   3.0 |           47 |
	| Pizzaiolo                    | RestaurantsTableService    | ON    |   3.0 |           34 |
	| Pizzaiolo                    | BusinessAcceptsCreditCards | ON    |   3.0 |           34 |
	| Pizzaiolo                    | GoodForKids                | ON    |   3.0 |           34 |
	| Flaming Kitchen              | RestaurantsTableService    | ON    |   3.0 |           25 |
	| Flaming Kitchen              | GoodForKids                | ON    |   3.0 |           25 |
	| What A Bagel                 | RestaurantsTableService    | ON    |   3.0 |            8 |
	| P & J Hamburgers Inn         | BusinessAcceptsCreditCards | ON    |   3.0 |            3 |
	| P & J Hamburgers Inn         | RestaurantsTableService    | ON    |   3.0 |            3 |
	| 99 Cent Sushi                | BusinessAcceptsCreditCards | ON    |   2.0 |            5 |
	| 99 Cent Sushi                | GoodForKids                | ON    |   2.0 |            5 |
	+------------------------------+----------------------------+-------+-------+--------------+
         
iv. Provide the SQL code you used to create your final dataset:
	
	SELECT b.name as business, 
	a.name as attribute,
	b.state, 
	b.stars,
	b.review_count
	FROM business b INNER JOIN category c 
	     ON c.business_id = b.id
	INNER JOIN attribute a 
	     ON a.business_id = b.id
	WHERE (a.name like  '%RestaurantsTableService%' OR 
			a.name like '%goodforkids%' OR
			a.name like '%BusinessAcceptsCreditCards%') 
			AND category = 'Restaurants' 
			AND b.state ='ON'
	ORDER BY b.stars DESC, b.review_count DESC